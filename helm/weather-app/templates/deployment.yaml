apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "weather-app.fullname" . }}
  labels:
    app: {{ include "weather-app.fullname" . }}
    chart: {{ include "weather-app.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "weather-app.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "weather-app.fullname" . }}
      annotations:
        # Example Prometheus scraping annotation:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
    spec:
      containers:
        - name: weather-app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5000
              name: http
          env:
            - name: OPENWEATHER_API_KEY
              value: "{{ .Values.environment.OPENWEATHER_API_KEY }}"

          # Liveness Probe
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20

          # Readiness Probe
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10

          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}

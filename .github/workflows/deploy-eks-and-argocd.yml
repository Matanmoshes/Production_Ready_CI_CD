name: Deploy_EKS_And_ArgoCD

on:
  workflow_run:
    workflows: ["Test_App_On_Minikube"]  # The name of your minikube test workflow
    types:
      - completed

jobs:
  deploy-eks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # or your region

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: Terraform Plan
        working-directory: ./infra
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: ./infra
        run: terraform apply -auto-approve tfplan

      - name: Install Kubectl & Helm
        uses: yokawasa/action-setup-kube-tools@v0.11.2
        with:
          setup-tools: |
            kubectl
            helm
          kubectl: "1.25.0"
          helm: "3.11.1"

      - name: Configure kubectl
        id: configure_kubectl
        run: |
          terraform output -raw kubeconfig > kubeconfig
          echo "KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV

      - name: Wait for EKS Nodes
        run: |
          kubectl get nodes --no-headers
          kubectl wait --for=condition=Ready nodes --all --timeout=600s

      - name: Install Argo CD
        run: |
          kubectl apply -n argocd -f argocd/install-argocd.yaml
          kubectl rollout status deployment/argocd-server -n argocd --timeout=300s || true
          kubectl rollout status deployment/argocd-application-controller -n argocd --timeout=300s || true
          # ... etc

      - name: Create Namespaces
        run: |
          kubectl create namespace weather-app --dry-run=client -o yaml | kubectl apply -f -
          kubectl create namespace monitoring --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Argo Apps
        run: |
          kubectl apply -f argocd/app-weatherapp.yaml -n argocd
          kubectl apply -f argocd/app-prometheus.yaml -n argocd

      - name: Verify Pods
        run: |
          kubectl wait --for=condition=Ready pod -l app.kubernetes.io/instance=weather-app -n weather-app --timeout=300s || true
          kubectl wait --for=condition=Ready pod -l app.kubernetes.io/name=grafana -n monitoring --timeout=300s || true
          kubectl wait --for=condition=Ready pod -l app.kubernetes.io/name=prometheus-operator -n monitoring --timeout=300s || true

      - name: Show Resources
        run: |
          kubectl get all -A
